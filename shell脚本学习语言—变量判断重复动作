由于shell主要是字符串处理语言，所以可以利用shell变量对字符串作很多事。
变量和算术：Shell变量除了用来保存某个值，Shell脚本和函数还有位置参数的功能，（命令行参数）
export：修改或打印（-p）环境变量;readonly：使变量不得修改;
环境是一个名称和值的简单列表，可供所有执行中的程序使用。新的进程从父进程继承环境，也可以在建立新的子进程之前修改它。
env也可临时改变环境变量-i选项用来初始化环境变量的，也就是丢弃任何的继承值仅传递命令行上指定的变量给程序使用
unset：从执行的Shell中删除变量和函数-v：删除变量;-f：删除函数
参数展开：是Shell提供变量值在程序中使用的过程
替换运算符：
  ${varname:-word}:如果变量为定义，则返回默认值
  ${varname:=word}:如果变量为定义，则设置变量为默认值
  ${varname:？message}:为了捕捉由于变量未定义所导致的错误
  ${varname:+word}:测试变量的存在（存在返回word）
  ${variable#pattern}:如果模式匹配于变量值的开头处，则删除匹配的最短部分，并返回剩下的
  ${variable##pattern}:如果模式匹配于变量值的开头处，则删除匹配的最长部分，并返回剩下的
  ${variable%pattern}:如果模式匹配于变量值的结尾处，则删除匹配的最短部分，并返回剩下的
  ${variable%pattern}:如果模式匹配于变量值的结尾处，则删除匹配的最长部分，并返回剩下的
位置参数：Shell脚本的命令行参数，同时也表示在Shell函数内的函数参数。名称以单个的整数来命名，大于9用{}括起来。
  $#:提供传递到Shell脚本或函数的参数总数
  $*,$@:一次表示所有的命令行参数
  shift命令是用来截去来自列表的位置参数，由左开始。shift也可选一个可选的参数，也就是要位移的参数的计数。
